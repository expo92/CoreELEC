diff U3 a/es-app/src/guis/GuiMenu.cpp b/es-app/src/guis/GuiMenu.cpp
--- a/es-app/src/guis/GuiMenu.cpp	Thu Jun 08 07:58:22 2017
+++ b/es-app/src/guis/GuiMenu.cpp	Thu Jun 08 16:55:16 2017
@@ -55,7 +55,29 @@
 {
 	auto s = new GuiSettings(mWindow, "EmuELEC Settings");
 	
-	
+       auto bgm_enabled = std::make_shared<SwitchComponent>(mWindow);
+		bgm_enabled->setState(Settings::getInstance()->getBool("BGM"));
+		s->addWithLabel("ENABLE BGM", bgm_enabled);
+		s->addSaveFunc([bgm_enabled] {
+			if (Settings::getInstance()->getBool("BGM") != bgm_enabled->getState()) {
+				runSystemCommand("bash /storage/.emulationstation/scripts/bgm.sh");
+                Settings::getInstance()->setBool("BGM", bgm_enabled->getState());
+			}
+		});
+
+		auto emuelec_bgm_boot_def = std::make_shared< OptionListComponent<std::string> >(mWindow, "START BGM AT BOOT", false);
+		std::vector<std::string> bgmboot;
+		bgmboot.push_back("Yes");
+		bgmboot.push_back("No");
+		for (auto it = bgmboot.cbegin(); it != bgmboot.cend(); it++)
+		emuelec_bgm_boot_def->add(*it, *it, Settings::getInstance()->getString("EmuELEC_BGM_BOOT") == *it);
+		s->addWithLabel("START BGM AT BOOT", emuelec_bgm_boot_def);
+		s->addSaveFunc([emuelec_bgm_boot_def] {
+			/*runSystemCommand("echo "+emuelec_bgm_boot_def->getSelected()+" > /storage/.config/def_fe");*/
+			if (Settings::getInstance()->getString("EmuELEC_BGM_BOOT") != emuelec_bgm_boot_def->getSelected())
+				Settings::getInstance()->setString("EmuELEC_BGM_BOOT",  emuelec_bgm_boot_def->getSelected());
+		});
+		
 	auto emuelec_mame_def = std::make_shared< OptionListComponent<std::string> >(mWindow, "ARCADE EMULATOR", false);
 		std::vector<std::string> mamechoices;
 		mamechoices.push_back("mame2003_plus");
@@ -253,7 +275,7 @@
 			if (Settings::getInstance()->getString("EmuELEC_BOOT") != emuelec_boot_def->getSelected())
 				Settings::getInstance()->setString("EmuELEC_BOOT", emuelec_boot_def->getSelected());
 		});
-				
+		
 	Window* window = mWindow;
 	ComponentListRow row;
 	
